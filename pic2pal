#!/bin/bash
# pic2pal uses 'ffmpeg' to create palettes from files in the current directory,
# 'ImageMagick' to enhance them and 'optipng' for lossless compression.
# Setup :	$ sudo apt-get install ffmpeg magick optipng
# usage (positional) :	$ ./pic2pal [-n number] [-s size] [-t] [-f]
# Options :
# -n : number of colors takes '1' to '256' (default is '256')
# -t : transparency take '0' (no) or '1' (yes) (default is '0')
#		the transparency color is added to the colors
#		useful to create ready-to-use palettes, like in a filter
# -s : size is lenght and/or height of the square palette generated
#		default is '500' giving 500x500 *.png when forces into square or if asked for 256 colors
# -f : force square useful to have a predictable output
# -c : lossless compression
# Exemple :	$ ./pic2pal -n 32 -t -s 1000 -f
#			will create a 1000x1000 32 colors palettes (31 + transparency)
#			for every image in the current directory

run() {
	input "$@"
	mkdir Palettes
	build_palette $ChoixCouleurs $ChoixT # la transparence empeche l'autocrop
	cd Palettes
	if [ $ForceSquare = "1" ] && [ $ChoixCouleurs -ge 18 ] ; then auto_crop ; fi
	resize_palette $ChoixSize
	if [ $ForceSquare = "0" ] ; then auto_crop ; fi
	if [ $ForceSquare = "1" ] && [ $ChoixCouleurs -lt 18 ] ; then
		auto_crop
		resize_palette $ChoixSize
	fi
	flip_palette
	if [ $ChoixCompression = "1" ] ; then lossless_compression ; fi
	ls -l
}

input() {
	ChoixCouleurs="256"
    ChoixT="0"
    ChoixSize="500"
	ForceSquare="0"
	ChoixCompression="0"
    while getopts ":n:ts:fc" opt; do
        case $opt in
            n) ChoixCouleurs="$OPTARG" ;;
            t) ChoixT="1" ;; 
            s) ChoixSize="$OPTARG" ;;
			f) ForceSquare="1" ;;
			c) ChoixCompression="1" ;;
            \?) echo "Usage: $(basename "$0") [-n number of colors] [-t add transparency] [-s size] [-f force square] [-c lossless compression] " >&2; exit 1 ;;
        esac
    done
# " ligne inutile a supprimer, sert à mitiger le bug "" de xed
}

build_palette() {
	NombreCouleurs=$1
	T=$2
	for i in *.JPG *.jpeg *.jpg *.png *.bmp *.mp4 ;	do
		echo "Je créé la palette de $i"
		ffmpeg -i "$i" -vf "palettegen=reserve_transparent=$T:max_colors=$NombreCouleurs" Palettes/"${i%.*}_palette.png"
	done
}

auto_crop() {
	for i in *.png ; do
		convert "$i" \
			-trim +repage \
			"$i"
	done
}

resize_palette() {
Size=$1
	for i in *.png ; do
		echo "Je redimensionne $i en "$Size"x"$Size" !"
		convert $i -scale "$Size"x"$Size"\! $i # \! permet d'ignorer le ratio et de forcer la taille de l'output
	done
}

flip_palette() {
	for i in *.png ; do
		echo "je retourne $i"
		convert $i -rotate 180 $i
	done
}

lossless_compression() {
	for i in *.png ; do
		echo "J'optimise $i"
		optipng -o7 "$i"
	done
}

run "$@"

exit 0

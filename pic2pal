#!/bin/bash
# pic2pal uses 'ffmpeg' to bulk create palettes from files in the current directory,
# 'ImageMagick' to enhance them and 'optipng' for lossless compression.
# Setup :	$ sudo apt-get install ffmpeg magick optipng
# usage (positional) :	$ ./pic2pal [-n number] [-s size] [-t] [-f]
# Options :
# -n : number of colors takes '1' to '256' (default is '256')
# -t : transparency :
#	the transparency color is added to the colors
#	useful to create ready-to-use palettes, like in a filter
# -l : height of the generated palette, in number of pixels (default is '500')
# -w : width of the generated palette, in number of pixels (default is '500')
# -f : forces size, useful to have a predictable output
# -c : lossless compression
# Exemple :	$ ./pic2pal -n 32 -t -s 1000 -f
#			will create a 1000x1000 32 colors palettes (31 + transparency)
#			for every image in the current directory

run() {
	input "$@"
	mkdir Palettes
	build_palette $ChoixCouleurs $ChoixT # la transparence empeche l'autocrop
	cd Palettes
	if [ $ForceSize = "1" ] && [ $ChoixCouleurs -ge 18 ] ; then auto_crop ; fi
	resize_palette $ChoixHeight $ChoixWidth
	if [ $ForceSize = "0" ] ; then auto_crop ; fi
	if [ $ForceSize = "1" ] && [ $ChoixCouleurs -lt 18 ] ; then
		auto_crop
		resize_palette $ChoixHeight $ChoixWidth
	fi
	flip_palette
	if [ $ChoixCompression = "1" ] ; then lossless_compression ; fi
	ls -l
}

input() {
	ChoixCouleurs="256"
    ChoixT="0"
	ChoixHeight="500"
	ChoixWidth="500"
	ForceSize="0"
	ChoixCompression="0"
    while getopts ":n:tl:w:fc" opt; do
        case $opt in
            n) ChoixCouleurs="$OPTARG" ;;
            t) ChoixT="1" ;; 
			l) ChoixHeight="$OPTARG" ;;
			w) ChoixWidth="$OPTARG" ;;
			f) ForceSize="1" ;;
			c) ChoixCompression="1" ;;
            \?) echo "Usage: $(basename "$0") [-n number of colors] [-t add transparency] [-l Height] [-w width] [-f force size] [-c lossless compression] " >&2; exit 1 ;;
        esac
    done
}

build_palette() {
	NombreCouleurs=$1
	T=$2
	for i in *.JPG *.jpeg *.jpg *.png *.bmp *.mp4 ;	do
		if [[ -e "$i" ]]; then
			echo "Je créé la palette de $i"
			ffmpeg -i "$i" -vf "palettegen=reserve_transparent=$T:max_colors=$NombreCouleurs" Palettes/"${i%.*}_palette.png"
		else
			echo "Aucun fichier de format $i trouvé."
		fi
	done
}
 # vérifier que les fichiers existent évite des bugs, il cherche sinon à faire trop d'itérations et à compléter les noms
auto_crop() {
	for i in *.png ; do
		convert "$i" \
			-trim +repage \
			"$i"
	done
}

resize_palette() {
Height=$1
Width=$2
	for i in *.png ; do
		echo "Je redimensionne $i en "$Height"x"$Width" !"
		convert $i -scale "$Width"x"$Height"\! $i # \! permet d'ignorer le ratio et de forcer la taille de l'output
	done
}

flip_palette() {
	for i in *.png ; do
		echo "je retourne $i"
		convert $i -rotate 180 $i
	done
}

lossless_compression() {
	for i in *.png ; do
		echo "J'optimise $i"
		optipng -o7 "$i"
	done
}

run "$@"

exit 0
